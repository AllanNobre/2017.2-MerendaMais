// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing ReportObservation Screen renders as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ReportObservationScreen
    observation={undefined}
    setReportObservation={[Function]}
    setStatusReportObservation={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Header
          backButton={true}
          subTitle="Observações adicionais"
          title="Relatório"
        />,
        <View
          behavior="padding"
        >
          <View
            style={
              Object {
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 30,
              }
            }
          >
            <TextInput
              multiline={true}
              onChangeText={[Function]}
              placeholder="Observações gerais que gostaria de adicionar ?(opcional)"
              style={
                Object {
                  "borderRadius": 12,
                  "borderWidth": 1,
                  "fontSize": 37.5,
                  "height": 333.5,
                  "paddingLeft": 10,
                  "textAlignVertical": "top",
                }
              }
              underlineColorAndroid="transparent"
              value={undefined}
            />
          </View>
        </View>,
        <TouchableOpacity
          activeOpacity={0.2}
          onPress={[Function]}
          style={
            Object {
              "backgroundColor": "#FF9500",
              "borderRadius": 7,
              "borderWidth": 1,
              "justifyContent": "flex-end",
              "marginBottom": 20,
              "marginHorizontal": 15,
              "marginTop": 30,
              "paddingVertical": 10,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#FFF",
                "textAlign": "center",
              }
            }
          >
            Concluir
          </Text>
        </TouchableOpacity>,
      ],
      "style": Object {
        "backgroundColor": "white",
        "flex": 6,
        "flexDirection": "column",
        "marginBottom": 9,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "backButton": true,
          "subTitle": "Observações adicionais",
          "title": "Relatório",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "behavior": "padding",
          "children": <View
            style={
              Object {
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 30,
              }
            }
          >
            <TextInput
              multiline={true}
              onChangeText={[Function]}
              placeholder="Observações gerais que gostaria de adicionar ?(opcional)"
              style={
                Object {
                  "borderRadius": 12,
                  "borderWidth": 1,
                  "fontSize": 37.5,
                  "height": 333.5,
                  "paddingLeft": 10,
                  "textAlignVertical": "top",
                }
              }
              underlineColorAndroid="transparent"
              value={undefined}
            />
          </View>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <TextInput
              multiline={true}
              onChangeText={[Function]}
              placeholder="Observações gerais que gostaria de adicionar ?(opcional)"
              style={
                Object {
                  "borderRadius": 12,
                  "borderWidth": 1,
                  "fontSize": 37.5,
                  "height": 333.5,
                  "paddingLeft": 10,
                  "textAlignVertical": "top",
                }
              }
              underlineColorAndroid="transparent"
              value={undefined}
            />,
            "style": Object {
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 30,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "multiline": true,
              "onChangeText": [Function],
              "placeholder": "Observações gerais que gostaria de adicionar ?(opcional)",
              "style": Object {
                "borderRadius": 12,
                "borderWidth": 1,
                "fontSize": 37.5,
                "height": 333.5,
                "paddingLeft": 10,
                "textAlignVertical": "top",
              },
              "underlineColorAndroid": "transparent",
              "value": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "setObservation",
        "nodeType": "class",
        "props": Object {
          "activeOpacity": 0.2,
          "children": <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#FFF",
                "textAlign": "center",
              }
            }
          >
            Concluir
          </Text>,
          "onPress": [Function],
          "style": Object {
            "backgroundColor": "#FF9500",
            "borderRadius": 7,
            "borderWidth": 1,
            "justifyContent": "flex-end",
            "marginBottom": 20,
            "marginHorizontal": 15,
            "marginTop": 30,
            "paddingVertical": 10,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "Concluir",
            "disabled": false,
            "ellipsizeMode": "tail",
            "style": Object {
              "color": "#FFF",
              "textAlign": "center",
            },
          },
          "ref": null,
          "rendered": "Concluir",
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Header
            backButton={true}
            subTitle="Observações adicionais"
            title="Relatório"
          />,
          <View
            behavior="padding"
          >
            <View
              style={
                Object {
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingTop": 30,
                }
              }
            >
              <TextInput
                multiline={true}
                onChangeText={[Function]}
                placeholder="Observações gerais que gostaria de adicionar ?(opcional)"
                style={
                  Object {
                    "borderRadius": 12,
                    "borderWidth": 1,
                    "fontSize": 37.5,
                    "height": 333.5,
                    "paddingLeft": 10,
                    "textAlignVertical": "top",
                  }
                }
                underlineColorAndroid="transparent"
                value={undefined}
              />
            </View>
          </View>,
          <TouchableOpacity
            activeOpacity={0.2}
            onPress={[Function]}
            style={
              Object {
                "backgroundColor": "#FF9500",
                "borderRadius": 7,
                "borderWidth": 1,
                "justifyContent": "flex-end",
                "marginBottom": 20,
                "marginHorizontal": 15,
                "marginTop": 30,
                "paddingVertical": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#FFF",
                  "textAlign": "center",
                }
              }
            >
              Concluir
            </Text>
          </TouchableOpacity>,
        ],
        "style": Object {
          "backgroundColor": "white",
          "flex": 6,
          "flexDirection": "column",
          "marginBottom": 9,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "backButton": true,
            "subTitle": "Observações adicionais",
            "title": "Relatório",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "behavior": "padding",
            "children": <View
              style={
                Object {
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingTop": 30,
                }
              }
            >
              <TextInput
                multiline={true}
                onChangeText={[Function]}
                placeholder="Observações gerais que gostaria de adicionar ?(opcional)"
                style={
                  Object {
                    "borderRadius": 12,
                    "borderWidth": 1,
                    "fontSize": 37.5,
                    "height": 333.5,
                    "paddingLeft": 10,
                    "textAlignVertical": "top",
                  }
                }
                underlineColorAndroid="transparent"
                value={undefined}
              />
            </View>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <TextInput
                multiline={true}
                onChangeText={[Function]}
                placeholder="Observações gerais que gostaria de adicionar ?(opcional)"
                style={
                  Object {
                    "borderRadius": 12,
                    "borderWidth": 1,
                    "fontSize": 37.5,
                    "height": 333.5,
                    "paddingLeft": 10,
                    "textAlignVertical": "top",
                  }
                }
                underlineColorAndroid="transparent"
                value={undefined}
              />,
              "style": Object {
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 30,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "multiline": true,
                "onChangeText": [Function],
                "placeholder": "Observações gerais que gostaria de adicionar ?(opcional)",
                "style": Object {
                  "borderRadius": 12,
                  "borderWidth": 1,
                  "fontSize": 37.5,
                  "height": 333.5,
                  "paddingLeft": 10,
                  "textAlignVertical": "top",
                },
                "underlineColorAndroid": "transparent",
                "value": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "setObservation",
          "nodeType": "class",
          "props": Object {
            "activeOpacity": 0.2,
            "children": <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#FFF",
                  "textAlign": "center",
                }
              }
            >
              Concluir
            </Text>,
            "onPress": [Function],
            "style": Object {
              "backgroundColor": "#FF9500",
              "borderRadius": 7,
              "borderWidth": 1,
              "justifyContent": "flex-end",
              "marginBottom": 20,
              "marginHorizontal": 15,
              "marginTop": 30,
              "paddingVertical": 10,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "Concluir",
              "disabled": false,
              "ellipsizeMode": "tail",
              "style": Object {
                "color": "#FFF",
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": "Concluir",
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
