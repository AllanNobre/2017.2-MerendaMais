// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing SchedulingVisit renders as expected 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FF9500",
        "borderBottomColor": "black",
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "height": 100,
        "paddingBottom": 10,
        "paddingTop": 10,
      }
    }
  >
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
    >
      <Icon
        allowFontScaling={false}
        color="black"
        name="ios-arrow-back-outline"
        size={45}
        style={
          Object {
            "marginLeft": 20,
          }
        }
      />
    </TouchableOpacity>
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "white",
          "fontSize": 60,
          "fontWeight": "bold",
          "marginLeft": 60,
          "marginTop": 10,
        }
      }
    >
      Agendar Visita
    </Text>
  </View>
  <PopupDialog
    dialogTitle={
      <DialogTitle
        haveTitleBar={true}
        title="Convidar um Agente?"
        titleAlign="center"
        titleStyle={
          Object {
            "fontSize": 30,
          }
        }
      />
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "margin": 20,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Object {
            "fontSize": 15,
            "lineHeight": 20,
            "textAlign": "justify",
          }
        }
      >
        Escolha algum dos agentes abaixo para poder convidá-lo. Para isso, é necessário possuir um aplicativo de email instalado no seu celular. Caso não possua ou não deseje convidar um agente, não selecione nenhum agente e clique em cancelar.
      </Text>
      <Picker
        mode="dialog"
        onValueChange={[Function]}
        selectedValue=""
        style={
          Object {
            "marginHorizontal": 15,
            "width": "95%",
          }
        }
      >
        <PickerItem
          color="#95a5a6"
          label="Escolha o agente"
          value=""
        />
        <PickerItem
          label="Agente Sanitário"
          value="outroemail@email.com"
        />
        <PickerItem
          label="Poder Executivo"
          value="email@email.com"
        />
      </Picker>
      <DialogButton
        align="center"
        disabled={false}
        enabled={true}
        key="notInvitingButton"
        onPress={[Function]}
        text="Cancelar"
      />
    </View>
  </PopupDialog>
  <ScrollViewMock>
    <View
      style={
        Object {
          "flex": 1,
          "marginTop": 20,
        }
      }
    >
      <View>
        <TouchableOpacity
          activeOpacity={0.2}
          key="searchSchoolButton"
          onPress={[Function]}
          style={
            Object {
              "backgroundColor": "#FF9500",
              "borderRadius": 7,
              "borderWidth": 1,
              "justifyContent": "flex-end",
              "marginBottom": 10,
              "marginHorizontal": 20,
              "marginTop": 10,
              "paddingVertical": 15,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#FFF",
                "textAlign": "center",
              }
            }
          >
            Pesquisar escola
          </Text>
        </TouchableOpacity>
      </View>
    </View>
    <SchoolData
      schoolSelected={true}
    />
    <View
      style={
        Object {
          "flex": 1,
          "marginTop": 20,
        }
      }
    >
      <DatePicker
        TouchableComponent={[Function]}
        androidMode="default"
        cancelBtnText="Cancelar"
        confirmBtnText="Confirmar"
        customStyles={
          Object {
            "dateInput": Object {
              "borderRadius": 7,
            },
          }
        }
        date=""
        disabled={false}
        duration={300}
        format="DD-MM-YYYY"
        height={259}
        hideText={false}
        iconSource={1}
        modalOnResponderTerminationRequest={[Function]}
        mode="date"
        onDateChange={[Function]}
        placeholder="Data"
        showIcon={true}
        style={
          Object {
            "marginHorizontal": 15,
            "width": "95%",
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "marginTop": 20,
        }
      }
    >
      <DatePicker
        TouchableComponent={[Function]}
        androidMode="default"
        cancelBtnText="Cancelar"
        confirmBtnText="Confirmar"
        customStyles={
          Object {
            "dateInput": Object {
              "borderRadius": 7,
            },
          }
        }
        date=""
        disabled={false}
        duration={300}
        height={259}
        hideText={false}
        iconSource={1}
        modalOnResponderTerminationRequest={[Function]}
        mode="time"
        onDateChange={[Function]}
        placeholder="Horário"
        showIcon={true}
        style={
          Object {
            "marginHorizontal": 15,
            "width": "95%",
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "marginTop": 20,
        }
      }
    >
      <View>
        <TouchableOpacity
          activeOpacity={0.2}
          key="searchCounselorButton"
          onPress={[Function]}
          style={
            Object {
              "backgroundColor": "#FF9500",
              "borderRadius": 7,
              "borderWidth": 1,
              "justifyContent": "flex-end",
              "marginBottom": 10,
              "marginHorizontal": 20,
              "marginTop": 10,
              "paddingVertical": 15,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#FFF",
                "textAlign": "center",
              }
            }
          >
            Pesquisar Conselheiro
          </Text>
        </TouchableOpacity>
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "marginTop": 20,
        }
      }
    >
      <View>
        <TouchableOpacity
          activeOpacity={0.2}
          key="searchAgentButton"
          onPress={[Function]}
          style={
            Object {
              "backgroundColor": "#FF9500",
              "borderRadius": 7,
              "borderWidth": 1,
              "justifyContent": "flex-end",
              "marginBottom": 10,
              "marginHorizontal": 20,
              "marginTop": 10,
              "paddingVertical": 15,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#FFF",
                "textAlign": "center",
              }
            }
          >
            Convidar Agente
          </Text>
        </TouchableOpacity>
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "marginTop": 20,
        }
      }
    >
      <Button
        enabled={true}
        key="scheduleButton"
        onPress={[Function]}
        text="Agendar"
      />
      <Button
        disabled={true}
        enabled={false}
        key="scheduleButton"
        onPress={[Function]}
        text="Agendar"
      />
    </View>
  </ScrollViewMock>
</View>
`;
