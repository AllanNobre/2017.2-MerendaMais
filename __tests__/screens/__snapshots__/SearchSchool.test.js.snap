// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing SearchSchool register method Testing school list rendering 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#FF9500",
        "borderBottomColor": "black",
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "height": 100,
        "paddingBottom": 10,
        "paddingTop": 10,
      }
    }
  >
    <View
      style={Object {}}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "column",
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "white",
            "fontSize": 60,
            "fontWeight": "bold",
            "marginTop": 10,
          }
        }
      >
        Pesquisar Escola
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "white",
            "fontSize": 20,
            "fontWeight": "bold",
          }
        }
      >
        
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 10,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 3,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FAFAFA",
            "borderColor": "gray",
            "borderRadius": 7,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginTop": 20,
            "paddingLeft": 2,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
        />
        <TextInput
          keyboardType="default"
          maxLength={50}
          onChangeText={[Function]}
          placeholder="Estado/MunicÃ­pio"
          returnKeyType="go"
          underlineColorAndroid="transparent"
          value=""
          width={280}
        />
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FAFAFA",
            "borderColor": "gray",
            "borderRadius": 7,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginTop": 20,
            "paddingLeft": 2,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
        />
        <TextInput
          keyboardType="default"
          maxLength={50}
          onChangeText={[Function]}
          placeholder="Escola a pesquisar"
          returnKeyType="go"
          underlineColorAndroid="transparent"
          value=""
          width={280}
        />
      </View>
      <View
        style={
          Object {
            "borderColor": "gray",
            "borderRadius": 7,
            "borderWidth": 1,
            "marginTop": 15,
            "paddingLeft": 2,
          }
        }
      >
        <View
          style={undefined}
        >
          <RCTPicker
            items={
              Array [
                Object {
                  "label": "Escolha sua UF",
                  "textColor": 4287997350,
                  "value": "",
                },
                Object {
                  "label": "DF",
                  "textColor": undefined,
                  "value": "DF",
                },
              ]
            }
            onChange={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            selectedIndex={0}
            style={
              Array [
                Object {
                  "height": 216,
                },
                undefined,
              ]
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "borderColor": "black",
          "borderRadius": 7,
          "borderWidth": 1,
          "flex": 2.5,
          "justifyContent": "center",
          "width": 320,
        }
      }
    >
      <RCTScrollView
        data={
          Array [
            Object {
              "codEscola": 1,
              "nome": "Nome",
            },
          ]
        }
        disableVirtualization={false}
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onContentSizeChange={[Function]}
        onEndReachedThreshold={2}
        onLayout={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onViewableItemsChanged={undefined}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      >
        <View>
          <View
            onLayout={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "borderBottomColor": "black",
                  "borderBottomWidth": 0.5,
                  "borderRadius": 7,
                }
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "opacity": 1,
                    "padding": 10,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "fontSize": 16,
                    }
                  }
                >
                  Nome
                </Text>
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                />
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "paddingBottom": 20,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#DEDEDE",
            "borderRadius": 8,
            "borderWidth": 1,
            "marginBottom": 0,
            "marginTop": 50,
            "opacity": 1,
            "paddingHorizontal": 117,
            "paddingVertical": 15,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "white",
              "fontSize": 20,
            }
          }
        >
          Pesquisar
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Testing SearchSchool renders as expected 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
    }
  }
>
  <Header
    backButton={true}
    subTitle=""
    title="Pesquisar Escola"
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 10,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 3,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FAFAFA",
            "borderColor": "gray",
            "borderRadius": 7,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginTop": 20,
            "paddingLeft": 2,
          }
        }
      >
        <Icon
          allowFontScaling={false}
          color="black"
          name="location-city"
          size={32}
          style={
            Object {
              "margin": 8,
            }
          }
        />
        <TextInput
          keyboardType="default"
          maxLength={50}
          onChangeText={[Function]}
          placeholder="Estado/MunicÃ­pio"
          returnKeyType="go"
          underlineColorAndroid="transparent"
          value="Porto Velho"
          width={280}
        />
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FAFAFA",
            "borderColor": "gray",
            "borderRadius": 7,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginTop": 20,
            "paddingLeft": 2,
          }
        }
      >
        <Icon
          allowFontScaling={false}
          color="black"
          name="search"
          size={30}
          style={
            Object {
              "margin": 8,
            }
          }
        />
        <TextInput
          keyboardType="default"
          maxLength={50}
          onChangeText={[Function]}
          placeholder="Escola a pesquisar"
          returnKeyType="go"
          underlineColorAndroid="transparent"
          value="BOM JESUS"
          width={280}
        />
      </View>
      <View
        style={
          Object {
            "borderColor": "gray",
            "borderRadius": 7,
            "borderWidth": 1,
            "marginTop": 15,
            "paddingLeft": 2,
          }
        }
      >
        <Picker
          mode="dialog"
          onValueChange={[Function]}
          selectedValue="RO"
        >
          <PickerItem
            color="#95a5a6"
            label="Escolha sua UF"
            value=""
          />
          <PickerItem
            label="DF"
            value="DF"
          />
        </Picker>
      </View>
    </View>
    <View
      key="schoolListView"
      style={
        Object {
          "borderColor": "black",
          "borderRadius": 7,
          "borderWidth": 1,
          "flex": 2.5,
          "justifyContent": "center",
          "width": 320,
        }
      }
    >
      <FlatList
        data={Array []}
        disableVirtualization={false}
        horizontal={false}
        initialNumToRender={10}
        keyExtractor={[Function]}
        maxToRenderPerBatch={10}
        numColumns={1}
        onEndReachedThreshold={2}
        renderItem={[Function]}
        scrollEventThrottle={50}
        updateCellsBatchingPeriod={50}
        windowSize={21}
      />
    </View>
    <View
      key="renderButton"
      style={
        Object {
          "flex": 1,
          "justifyContent": "flex-end",
          "paddingBottom": 20,
        }
      }
    >
      <TouchableOpacity
        activeOpacity={0.7}
        key="activatedButton"
        onPress={[Function]}
        style={
          Object {
            "backgroundColor": "#FF9500",
            "borderRadius": 8,
            "borderWidth": 1,
            "marginBottom": 0,
            "marginTop": 50,
            "paddingHorizontal": 117,
            "paddingVertical": 15,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "white",
              "fontSize": 20,
            }
          }
        >
          Pesquisar
        </Text>
      </TouchableOpacity>
    </View>
  </View>
</View>
`;
